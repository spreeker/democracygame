how to build 3 legged oauth ...

-Define resources (which URIs to protect)
-Make a mechanism to personalize request tokens ... (via user_id in URI or 
 something else?) 
  -personalized request token uri? NO
  -username in first token request? NO
  ..
  -Not needed -> user will become clear to Emocracy through the user that is
   eventually sent to it for authorization. Upon authorization a personalized
   acces token is saved on the Emocracy server.
 Store the token on the server, using oauth_provider.models.Token(user =..)
-3rd party redirects user to Emocracy token authorization URI. User authorizes
 the request token. Request token is activated.
-3rd party exchanges request token for acces token and stores it. The Emocracy
 server also stores it.

-Third party goes and does its thing to the users data.

 
 
-scope? (User 